name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PROJECT_DIR: paisasplit  # <--- change this if your app folder has a different name

jobs:
  build-android:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ env.PROJECT_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Flutter setup
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter version
        run: flutter --version

      - name: Pub get
        run: flutter pub get

      - name: Codegen
        run: dart run build_runner build -d

      - name: Analyze (treat warnings as errors)
        run: dart analyze --fatal-infos --fatal-warnings

      - name: Tests
        run: flutter test

      # Keep these two if you want APK artifacts from CI.
      # If you are skipping local APK builds in Codex, that's fine â€” CI still produces them.
      - name: Build DEBUG APK (universal)
        run: flutter build apk --debug

      - name: Build RELEASE APKs (per-ABI, unsigned)
        run: flutter build apk --release --split-per-abi

      - name: Collect artifacts
        run: |
          mkdir -p artifacts
          cp build/app/outputs/flutter-apk/app-debug.apk artifacts/PaisaSplit-debug-universal.apk
          cp build/app/outputs/flutter-apk/app-arm64-v8a-release.apk artifacts/PaisaSplit-release-arm64-v8a-UNSIGNED.apk || true
          cp build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk artifacts/PaisaSplit-release-armeabi-v7a-UNSIGNED.apk || true
          cp build/app/outputs/flutter-apk/app-x86_64-release.apk artifacts/PaisaSplit-release-x86_64-UNSIGNED.apk || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: PaisaSplit-APK-${{ github.sha }}
          path: ${{ env.PROJECT_DIR }}/artifacts/*
          retention-days: 14


      # Optional: Enable this section when signing release builds for tagged versions.
      # - name: Build signed release APKs
      #   if: startsWith(github.ref, 'refs/tags/')
      #   env:
      #     ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      #     ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      #     ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      #     ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      #   run: |
      #     echo "${ANDROID_KEYSTORE_BASE64}" | base64 --decode > android/app/release.keystore
      #     flutter build apk --release --split-per-abi --obfuscate --split-debug-info=build/debug-info
      #     rm -f android/app/release.keystore
